datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Order {
  createdAt DateTime         @default(now())
  gig       Gig?             @relation(fields: [gigId], references: [id])
  gigId     String?          @db.ObjectId
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  status    EnumOrderStatus?
  updatedAt DateTime         @updatedAt
  user      User?            @relation(fields: [userId], references: [id])
  userId    String?          @db.ObjectId
}

model Gig {
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?   @db.ObjectId
  createdAt   DateTime  @default(now())
  description String?
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  orders      Order[]
  price       Float?
  reviews     Review[]
  title       String?
  updatedAt   DateTime  @updatedAt
}

model Category {
  createdAt   DateTime @default(now())
  description String?
  gigs        Gig[]
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  updatedAt   DateTime @updatedAt
}

model Review {
  comment   String?
  createdAt DateTime @default(now())
  gig       Gig?     @relation(fields: [gigId], references: [id])
  gigId     String?  @db.ObjectId
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  rating    Int?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  lastName  String?
  orders    Order[]
  password  String
  reviews   Review[]
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

enum EnumOrderStatus {
  Option1
}
